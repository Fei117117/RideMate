import sqlalchemy
from sqlalchemy import create_engine
import traceback
import glob
import os
from pprint import pprint
import simplejson as json
import requests
import time
from IPython.display import display

URI = "dbbikes.c06rsktpo8sk.us-east-1.rds.amazonaws.com"
PORT = "3306"
DB = "dbbikes"
USER = "minhly"
PASSWORD = "22201371"
engine = create_engine(
    "mysql://{}:{}@{}:{}/{}".format(USER, PASSWORD, URI, PORT, DB), echo=True)

sql = """CREATE DATABASE IF NOT EXISTS dbbikes"""
engine.execute(sql)

for res in engine.execute("SHOW VARIABLES"):
    print(res)

sql = """
CREATE TABLE IF NOT EXISTS station
(
address VARCHAR(256),
banking INTEGER,
bike_stands INTEGER,
bonus INTEGER,
contract_name VARCHAR(256),
name VARCHAR(256),
number INTEGER,
position_lat REAL,
position_lng REAL,
status VARCHAR(256)
)
"""
try:
    res = engine.execute("DROP TABLE IF EXISTS station")
    res = engine.execute(sql)
    print(res.fetchall())
except Exception as e:
    print(e)

sql = """
CREATE TABLE IF NOT EXISTS availability
(
number INTEGER,
available_bikes INTEGER,
available_bike_stands INTEGER,
last_update INTEGER,
status VARCHAR(256)
)
"""
try:
    res = engine.execute("DROP TABLE IF EXISTS availability")
    res = engine.execute(sql)
    print(res.fetchall())
except Exception as e:
    print(e)

sql = """
CREATE TABLE IF NOT EXISTS weather
(
number INTEGER,
last_update INT(11) UNSIGNED,
temperature REAL,
weathercode INTEGER,
windspeed REAL,
hourly_time VARCHAR(2100),
hourly_temp VARCHAR(1100),
hourly_preci VARCHAR(900),
hourly_weathercode VARCHAR(700),
windspeed_10m VARCHAR(1100)
)
"""

sql 
try:
    res = engine.execute("DROP TABLE IF EXISTS weather")
    res = engine.execute(sql)
    print(res.fetchall())
except Exception as e:
    print(e)
